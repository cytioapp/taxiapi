version: 2
jobs:
  build:
    working_directory: ~/taxiapi
    docker:
      - image: circleci/node:10-browsers
        environment:
          NODE_ENV: test
          DATABASE_URL: "postgres://postgres:postgres@127.0.0.1:5432/taxidb"
          JWT_SECRET: "foobarfoobar"
          REALTIMEDATABASE_URL: "ws://localhost:5000"
      - image: circleci/postgres:10-alpine-postgis-ram

    steps:
      - checkout
      - restore_cache:
          key: node-modules-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: cypress
      - run:
          name: Instal dependencies
          command: npm install
      - save_cache:
          key: node-modules-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: cypress
          paths:
            - ~/.cache/Cypress
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: setup
          command: |
            npx createdbjs taxidb --user=postgres --pasword=postgres
            npx knex migrate:latest
      - run:
          name: Test
          command: |
            npm run test:ci
            DEBUG=firebase-server* npx firebase-server -p 5000 -e -b
            dockerize -wait tcp://localhost:5000 -timeout 1m
            npm start &
            dockerize -wait http://localhost:3000 -timeout 1m
            # npx cypress run
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: junit.xml
